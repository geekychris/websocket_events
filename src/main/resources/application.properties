# Redis Configuration
spring.data.redis.host=${REDIS_HOST:localhost}
#spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.port=${REDIS_PORT:31379}

spring.data.redis.password=${REDIS_PASSWORD:}
spring.data.redis.database=0
spring.data.redis.timeout=2000

# Redis Connection Pool
spring.data.redis.lettuce.pool.enabled=true
spring.data.redis.lettuce.pool.max-active=8
spring.data.redis.lettuce.pool.max-idle=8
spring.data.redis.lettuce.pool.min-idle=0
spring.data.redis.lettuce.pool.max-wait=-1ms

# Application name
spring.application.name=websocket-service

# WebSocket Logging Configuration
logging.level.org.springframework.web.socket=DEBUG
logging.level.com.example.websocket=DEBUG
logging.level.org.springframework.messaging=DEBUG
logging.level.org.springframework.web.socket.config=DEBUG
logging.level.org.springframework.web.socket.messaging=DEBUG
logging.level.org.springframework.web.socket.server=DEBUG

# File Logging Configuration
logging.file.name=./logs/application.log
logging.file.path=./logs

# Logging Pattern Configuration
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Server Configuration
server.port=8080
server.servlet.context-path=/
server.tomcat.threads.max=200

# WebSocket Configuration
spring.websocket.max-text-message-size=65536
spring.websocket.max-binary-message-size=65536
spring.websocket.max-sessions-per-user=5
spring.websocket.servlet.load-on-startup=1

# STOMP Configuration
spring.websocket.stomp.message-size-limit=65536
spring.websocket.stomp.send-buffer-size-limit=512KB
spring.websocket.stomp.send-time-limit=15000

# Kafka Configuration
spring.kafka.bootstrap-servers=localhost:29092
#spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=${spring.application.name}
spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.example.websocket.model
kafka.topic.user-events=user-events

# CORS Configuration for Development
spring.webmvc.cors.allowed-origins=http://localhost:3002
spring.webmvc.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.webmvc.cors.allowed-headers=*
spring.webmvc.cors.allow-credentials=true
spring.webmvc.cors.max-age=3600

# Logging Configuration
logging.level.root=INFO
logging.level.org.springframework.web=INFO
logging.level.org.springframework.messaging=DEBUG

# Performance Tuning
server.tomcat.max-connections=10000
server.tomcat.accept-count=100
server.tomcat.max-threads=200
server.tomcat.min-spare-threads=10

# Session Configuration
server.servlet.session.timeout=30m
spring.session.timeout=30m

# Actuator endpoints for monitoring (optional)
management.endpoints.web.exposure.include=health,metrics,info
management.endpoint.health.show-details=when_authorized

